"use strict";(self.webpackChunkpileum_web=self.webpackChunkpileum_web||[]).push([[2967],{6155:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var t=i(4848),o=i(8453);const r={slug:"introducing-pileum-connect",title:"Introducing PileumConnect",authors:"fred",tags:["pileum","franceidentite","oidc","proof-of-personhood","ethereum","eip712"]},s=void 0,c={permalink:"/blog/introducing-pileum-connect",source:"@site/blog/2024-03-01-introducing-pileum-connect.md",title:"Introducing PileumConnect",description:"PileumConnect is a public OpenID Connect Provider designed for proof of personhood and privacy.",date:"2024-03-01T00:00:00.000Z",tags:[{inline:!0,label:"pileum",permalink:"/blog/tags/pileum"},{inline:!0,label:"franceidentite",permalink:"/blog/tags/franceidentite"},{inline:!0,label:"oidc",permalink:"/blog/tags/oidc"},{inline:!0,label:"proof-of-personhood",permalink:"/blog/tags/proof-of-personhood"},{inline:!0,label:"ethereum",permalink:"/blog/tags/ethereum"},{inline:!0,label:"eip712",permalink:"/blog/tags/eip-712"}],readingTime:.625,hasTruncateMarker:!0,authors:[{name:"Fr\xe9d\xe9ric",title:"Pileum team",url:"https://fredericb.info",socials:{github:"https://github.com/frederic"},imageURL:"https://github.com/frederic.png",key:"fred",page:null}],frontMatter:{slug:"introducing-pileum-connect",title:"Introducing PileumConnect",authors:"fred",tags:["pileum","franceidentite","oidc","proof-of-personhood","ethereum","eip712"]},unlisted:!1},a={authorsImageUrls:[void 0]},l=[];function d(e){const n={a:"a",code:"code",em:"em",p:"p",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://connect.pileum.eu",children:"PileumConnect"})," is a public ",(0,t.jsx)(n.code,{children:"OpenID Connect Provider"})," designed for ",(0,t.jsx)(n.a,{href:"/docs/intro#proof-of-personhood",children:"proof of personhood"})," and privacy."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Users"})," must own a ",(0,t.jsx)(n.a,{href:"/docs/connect",children:"french electronic national identity card"})," to register an account and prove their identity.\nThe user's identity is processed directly in the browser, ensuring it is never transmitted over the internet."]}),"\n",(0,t.jsxs)(n.p,{children:["Any ",(0,t.jsx)(n.code,{children:"OpenID Connect Relying Party"})," can use the service to authenticate its users : the only user information provided is a ",(0,t.jsx)(n.em,{children:"Pairwise Pseudonymous Identifier"})," (PPID). PPID is the identifier of a ",(0,t.jsx)(n.code,{children:"User"})," to a ",(0,t.jsx)(n.code,{children:"Relying Party"})," and cannot be correlated with the ",(0,t.jsx)(n.code,{children:"User"}),"'s PPID at another ",(0,t.jsx)(n.code,{children:"Relying Party"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["PileumConnect also extends the official ",(0,t.jsx)(n.code,{children:"OpenID Connect"})," specifications with ",(0,t.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-712",children:"EIP-712 signatures"})," to make authentication responses compatible with Ethereum smart contracts."]}),"\n",(0,t.jsxs)(n.p,{children:["Check the ",(0,t.jsx)(n.a,{href:"/docs/connect",children:"documentation for more details"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);